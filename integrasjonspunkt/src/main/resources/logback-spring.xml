<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false">

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />
    <include resource="org/springframework/boot/logging/logback/file-appender.xml" />

    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener" />

    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/spring.log}"/>
    <springProperty name="enableLogstash" source="app.logger.enableLogstash"/>
    <springProperty name="enableLoggingProxy" source="app.logger.enableLoggingProxy"/>
    <springProperty name="destination" source="app.logger.destination"/>
    <springProperty name="destination2" source="app.logger.destination2"/>
    <springProperty name="stdoutAppender" source="app.logger.stdoutAppender"/>
    <springProperty name="profiles" source="spring.profiles.active"/>
    <springProperty name="orgnr" source="difi.move.org.number"/>
    <springProperty name="clientId" source="difi.move.oidc.clientId"/>
    <springProperty name="tokenUri" source="difi.move.oidc.url"/>
    <springProperty name="audience" source="difi.move.oidc.audience"/>
    <springProperty name="keystore" source="difi.move.oidc.keystore"/>
    <springProperty name="kspass" source="difi.move.oidc.keystore.password"/>
    <springProperty name="ksalias" source="difi.move.oidc.keystore.alias"/>
    <springProperty name="kspath" source="difi.move.oidc.keystore.path"/>
    <springProperty name="proxy-host" source="app.logger.proxy-host"/>
    <springProperty name="proxy-rsocket-port" source="app.logger.proxy-rsocket-port"/>

    <if condition='property("enableLogstash").contains("true")'>
        <then>
            <appender name="stash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                <destination>${destination}</destination>
                <droppedWarnFrequency>5</droppedWarnFrequency>
                <!-- encoder is required -->
                <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                    <customFields>
                        {"appname":"@project.artifactId@","HOSTNAME":"${HOSTNAME}","buildinfo.version":"@project.version@","buildinfo.lastcommit":"@git.commit.id@","orgnr":"${orgnr}"}
                    </customFields>
                    <fieldNames>
                        <!-- Ignore message and stackTrace field here due to possible sensitive data (personal identity number), replaced in pattern below. -->
                        <message>[ignore]</message>
                        <stackTrace>[ignore]</stackTrace>
                    </fieldNames>
                    <provider class="net.logstash.logback.composite.loggingevent.LoggingEventPatternJsonProvider">
                        <pattern>
                            {
                            "message": "%replace(%msg){'[0-9]{11}','**********'}",
                            "stack_trace": "%replace(%ex{full}){'[0-9]{11}','**********'}"
                            }
                        </pattern>
                    </provider>
                </encoder>
            </appender>
            <if condition='isDefined("destination2")'>
                <then>
                    <appender name="stash2" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                        <destination>${destination2}</destination>
                        <droppedWarnFrequency>5</droppedWarnFrequency>
                        <!-- encoder is required -->
                        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                            <customFields>
                                {"appname":"@project.artifactId@","HOSTNAME":"${HOSTNAME}","buildinfo.version":"@project.version@","buildinfo.lastcommit":"@git.commit.id@","orgnr":"${orgnr}"}
                            </customFields>
                            <fieldNames>
                                <!-- Ignore message and stackTrace field here due to possible sensitive data (personal identity number), replaced in pattern below. -->
                                <message>[ignore]</message>
                                <stackTrace>[ignore]</stackTrace>
                            </fieldNames>
                            <provider
                                    class="net.logstash.logback.composite.loggingevent.LoggingEventPatternJsonProvider">
                                <pattern>
                                    {
                                    "message": "%replace(%msg){'[0-9]{11}','**********'}",
                                    "stack_trace": "%replace(%ex{full}){'[0-9]{11}','**********'}"
                                    }
                                </pattern>
                            </provider>
                        </encoder>
                    </appender>
                </then>
            </if>

            <root level="INFO">
                <appender-ref ref="stash"/>
                <if condition='isDefined("destination2")'>
                    <then>
                        <appender-ref ref="stash2"/>
                    </then>
                </if>
            </root>
        </then>
    </if>

    <if condition='property("enableLoggingProxy").contains("true")'>
        <then>
            <appender name="loggingProxy" class="no.difi.meldingsutveksling.logging.LoggingProxyAppender">
                <proxyHost>${proxy-host}</proxyHost>
                <proxyRSocketPort>${proxy-rsocket-port}</proxyRSocketPort>
                <orgnr>${orgnr}</orgnr>
                <kspath>${kspath}</kspath>

                <jwtTokenConfig class="no.difi.move.common.oauth.JwtTokenConfig">
                    <clientId>${clientId}</clientId>
                    <tokenUri>${tokenUri}</tokenUri>
                    <audience>${audience}</audience>
                    <keystore class="no.difi.move.common.config.KeystoreProperties">
                        <alias>${ksalias}</alias>
                        <password>${kspass}</password>
                    </keystore>
                </jwtTokenConfig>

                <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                    <customFields>
                        {"appname":"${project.artifactId}","buildinfo.version":"${project.version}","buildinfo.lastcommit":"${buildNumber}",
                        "build.branch": "${scmBranch}"}
                    </customFields>
                    <fieldNames>
                        <!-- Ignore message and stackTrace field here due to possible sensitive data (personal identity number), replaced in pattern below. -->
                        <message>[ignore]</message>
                        <stackTrace>[ignore]</stackTrace>
                    </fieldNames>
                    <provider class="net.logstash.logback.composite.loggingevent.LoggingEventPatternJsonProvider">
                        <pattern>
                            {
                            "message": "%replace(%msg){'[0-9]{11}','**********'}",
                            "stack_trace": "%replace(%ex{full}){'[0-9]{11}','**********'}"
                            }
                        </pattern>
                    </provider>
                </encoder>
            </appender>

            <root level="INFO">
                <appender-ref ref="loggingProxy"/>
            </root>
        </then>
    </if>

    <appender name="JSON" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <logstashMarkers/>
                <pattern>
                    <pattern>
                        {
                        "level": "%level",
                        "message": "%replace(%msg){'[0-9]{11}','**********'}",
                        "stack_trace": "%replace(%ex{full}){'[0-9]{11}','**********'}",
                        "class": "%class",
                        "method": "%method",
                        "appname": "@project.artifactId@"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <root level="INFO">
        <appender-ref ref="${stdoutAppender:-CONSOLE}"/>
        <appender-ref ref="FILE"/>
    </root>

</configuration>
